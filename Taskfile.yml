version: '3'

tasks:
  build:
    desc: "Build module"
    cmds:
      - go clean -cache
      - env CGO_LDFLAGS="-Wl,-no_warn_duplicate_libraries" go build ./...
    silent: true

  test:
    desc: "Run tests"
    cmds:
      - env CGO_LDFLAGS="-Wl,-no_warn_duplicate_libraries" go test ./... -count=1 

  coverage:
    desc: "Display test coverage"
    cmds:
      - go test ./... -coverprofile=coverage.out && go tool cover -html=coverage.out

  cover:
    desc: "Overall test coverage"
    silent: false
    cmds:
      - |
        env CGO_LDFLAGS="-Wl,-no_warn_duplicate_libraries" go test ./... -coverprofile=coverage.out && go tool cover -func coverage.out | grep total | awk '{print "Total Coverage: " substr($3, 1, length($3)-1) "%"}'

  docs:
    desc: "Produce simple documentation in packages"
    cmds:
      - task: docs-async
      - task: docs-cgo_bridge
      - task: docs-engine
      - task: docs-memory
      - task: docs-optimizer
      - task: docs-training
      - task: docs-layers
      - task: docs-vision-dataloader
      - task: docs-vision-dataset
      - task: docs-vision-preprocessing

  docs-vision-dataloader:
    dir: ./vision/dataloader
    cmds:
      - godocdown -output docs.md

  docs-vision-dataset:
    dir: ./vision/dataset
    cmds:
      - godocdown -output docs.md

  docs-vision-preprocessing:
    dir: ./vision/preprocessing
    cmds:
      - godocdown -output docs.md

  docs-layers:
    dir: ./layers
    cmds:
      - godocdown -output docs.md

  docs-async:
    dir: ./async
    cmds:
      - godocdown -output docs.md

  docs-cgo_bridge:
    dir: ./cgo_bridge
    cmds:
      - godocdown -output docs.md

  docs-engine:
    dir: ./engine
    cmds:
      - godocdown -output docs.md

  docs-memory:
    dir: ./memory
    cmds:
      - godocdown -output docs.md

  docs-optimizer:
    dir: ./optimizer
    cmds:
      - godocdown -output docs.md

  docs-training:
    dir: ./training
    cmds:
      - godocdown -output docs.md